"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = "function" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || "@@iterator", asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator", toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, ""); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = "suspendedStart"; return function (method, arg) { if ("executing" === state) throw new Error("Generator is already running"); if ("completed" === state) { if ("throw" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if ("next" === context.method) context.sent = context._sent = context.arg;else if ("throw" === context.method) { if ("suspendedStart" === state) throw state = "completed", context.arg; context.dispatchException(context.arg); } else "return" === context.method && context.abrupt("return", context.arg); state = "executing"; var record = tryCatch(innerFn, self, context); if ("normal" === record.type) { if (state = context.done ? "completed" : "suspendedYield", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } "throw" === record.type && (state = "completed", context.method = "throw", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: "normal", arg: fn.call(obj, arg) }; } catch (err) { return { type: "throw", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { ["next", "throw", "return"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if ("throw" !== record.type) { var result = record.arg, value = result.value; return value && "object" == _typeof(value) && hasOwn.call(value, "__await") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke("next", value, resolve, reject); }, function (err) { invoke("throw", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke("throw", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, "throw" === context.method) { if (delegate.iterator["return"] && (context.method = "return", context.arg = undefined, maybeInvokeDelegate(delegate, context), "throw" === context.method)) return ContinueSentinel; context.method = "throw", context.arg = new TypeError("The iterator does not provide a 'throw' method"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if ("throw" === record.type) return context.method = "throw", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, "return" !== context.method && (context.method = "next", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = "throw", context.arg = new TypeError("iterator result is not an object"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = "normal", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: "root" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if ("function" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, "constructor", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, "constructor", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, "GeneratorFunction"), exports.isGeneratorFunction = function (genFun) { var ctor = "function" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || "GeneratorFunction" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, "GeneratorFunction")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, "Generator"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, "toString", function () { return "[object Generator]"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = "next", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { "t" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if ("throw" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = "throw", record.arg = exception, context.next = loc, caught && (context.method = "next", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if ("root" === entry.tryLoc) return handle("end"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, "catchLoc"), hasFinally = hasOwn.call(entry, "finallyLoc"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error("try statement without catch or finally"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && ("break" === type || "continue" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = "next", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if ("throw" === record.type) throw record.arg; return "break" === record.type || "continue" === record.type ? this.next = record.arg : "return" === record.type ? (this.rval = this.arg = record.arg, this.method = "return", this.next = "end") : "normal" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, "catch": function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if ("throw" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error("illegal catch attempt"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, "next" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

/*
 * configuration
 *      "vmsUrl"            : "url of accounts site",
 *      "environment"       : "development|production",
        "siteId"            : "To be given by guc admin",
        "siteKey"           : "To be given by guc admin"
 */
var utility = require('./utility/utility');

var cookie = require('./utility/cookie');

var visitService = require('./service/visitService');

var customStorage = require('./utility/customStorage');

var _require = require('./utility/crypto'),
    decrypt = _require.decrypt,
    encrypt = _require.encrypt;

var styleStr = require('./utility/cssStyle');

var loadGTagScript = require('./utility/GA');

function PaisabazaarGuc(configuration, additionalData) {
  var cookieDomain = '.paisabazaar.com'; // window.location.hostname.split(".").slice(1).join(".") ;

  this.configuration = utility.extend(configuration, {
    cookieOption: {
      domain: utility.isEmpty(cookieDomain) ? 'localhost' : cookieDomain,
      expires: 3650 // 365 * 10 = 10 years

    }
  });

  switch (this.configuration.environment) {
    case 'development':
      this.configuration.vmsUrl = 'https://staging-api-internal.paisabazaar.com/MSP/api/v1/visit';
      this.configuration.gtagId = 'GTM-JGPT';
      this.configuration.gtagUrl = 'https://www.googletagmanager.com/gtag/js?id=GTM-JGPT';
      this.configuration.kafkaServiceUrl = 'https://staging-api-internal.paisabazaar.com/MSP/api/v1/pbguc/event/produce';
      break;

    case 'staging':
      this.configuration.vmsUrl = 'https://staging-api-internal.paisabazaar.com/MSP/api/v1/visit';
      this.configuration.gtagId = 'GTM-JGPT';
      this.configuration.gtagUrl = 'https://www.googletagmanager.com/gtag/js?id=GTM-JGPT';
      this.configuration.kafkaServiceUrl = 'https://staging-api-internal.paisabazaar.com/MSP/api/v1/pbguc/event/produce';
      break;

    case 'production':
      this.configuration.vmsUrl = 'https://api2.paisabazaar.com/MSP/api/v1/visit';
      this.configuration.gtagId = 'GTM-JGPT';
      this.configuration.gtagUrl = 'https://www.googletagmanager.com/gtag/js?id=GTM-JGPT';
      this.configuration.kafkaServiceUrl = 'https://api2.paisabazaar.com/MSP/api/v1/pbguc/event/produce';
      break;

    default:
      break;
  }

  this.additionalData = additionalData || {};

  this.initialize = function () {
    loadGTagScript(this.configuration);
    window.pbgucGtag = window.pbgucGtag.bind(this);
    var requiredParams = ['environment', 'siteId'];
    var sitesMap = {
      PAISABAZAAR_BUREAU: "Bureau",
      PAISABAZAAR_HOMEPAGE: "Homepage",
      PAISABAZAAR_PL_MARKET_PLACE: "PL Subdomain(market place)",
      PAISABAZAAR_PL_SEO_PAGES: "PL Main domain(SEO pages)",
      PAISABAZAAR_DL: "PL digital lending (React)",
      PAISABAZAAR_HL: "Home Loan",
      PAISABAZAAR_CC: "Credit Card",
      PAISABAZAAR_SEO_PAGES: "SEO pages",
      PAISABAZAAR_MF: "Mutual Fund",
      PAISABAZAAR_STEPUP_CARD: "Step Up",
      PAISABAZAAR_SSO: "Single Sign On",
      PAISABAZAAR: "PBGUC Default Key for Hub initialization"
    };
    var sitesList = Object.keys(sitesMap);
    var hasRequiredParams = utility.hasRequiredParams(requiredParams, utility.extend(additionalData, this.configuration));

    if (false === utility.isEmpty(hasRequiredParams)) {
      return console.error(new Error('[' + hasRequiredParams.join(',') + '] is required'));
    }

    if (!sitesList.includes(this.configuration.siteId)) {
      throw new Error("".concat(this.configuration.siteId, " - is not a valid site-Id. Valid site-Id are ").concat(sitesList.join()));
    }

    this.setEnvironment(configuration);
    this.setGucCookieName();
    this.setGucObject();
    /* // 30 minutes changes
    window.addEventListener('scroll', utility.debounce(this._invalidateVisitChain.bind(this), 250) );
    window.addEventListener('click', this._invalidateVisitChain.bind(this) );
    */

    this.customStorage = this.getCustomStorageObject();
    this.setVisit();

    if (this._environment === 'staging') {
      window.decryptPbgucData = this.decryptPbgucData;
    }
  };

  this.setEnvironment = function (configuration) {
    this._environment = configuration.environment || 'development';
  };

  this.setGucCookieName = function () {
    var cookieNameObj = {
      development: 'PBGUC_DEV',
      staging: 'PBGUC_DEV',
      local: 'PBGUC_DEV',
      production: 'GUC'
    };
    this._gucCookieName = cookieNameObj[this._environment] || cookieNameObj.development;
  };

  this.setGucObject = function () {
    //Check if cookie exists
    var cookieData = cookie.getObject(this._gucCookieName);
    if (false === utility.isEmpty(cookieData)) return false;

    try {
      window.pbgucGtag({
        'label': 'pbguc_initialized',
        'site-id': this.configuration.siteId
      });
    } catch (error) {
      console.log(error);
    }

    cookie.setObject(this._gucCookieName, {
      id: utility.uuid(),
      // 30 minutes changes
      // lastActive      : utility.currentTime(),
      createdAt: utility.currentTime(),
      updatedAt: utility.currentTime()
    }, this.configuration.cookieOption);
  };

  this.getGucObject = function () {
    var cookieData = cookie.getObject(this._gucCookieName);
    if (true === utility.isEmpty(cookieData)) return false;
    return cookieData;
  };

  this.setCustomerData = function (customerDataObj) {
    if (this.configuration.siteId !== 'PAISABAZAAR_SSO') {
      throw new Error("".concat(this.configuration.siteId, " is not authorized to set customer data. Only SSO can set customer data."));
    }

    var mobileNo = customerDataObj.mobileNo,
        customerId = customerDataObj.customerId;
    var cookieData = cookie.getObject(this._gucCookieName);
    var customerData = {};

    if (utility.isEmpty(mobileNo) || utility.isEmpty(customerId)) {
      return false;
    }

    try {
      window.pbgucGtag({
        'label': 'pbguc_set_customer_data',
        'site-id': this.configuration.siteId
      });
    } catch (error) {
      console.log(error);
    }

    cookieData.mobileNo = encrypt(utility.secretKey, mobileNo);
    cookieData.customerId = encrypt(utility.secretKey, customerId);
    cookie.extendObject(this._gucCookieName, cookieData, this.configuration.cookieOption);
  };

  this.getCustomerData = function () {
    var cookieData = cookie.getObject(this._gucCookieName);
    var customerData = {};
    customerData.mobileNo = cookieData && cookieData.mobileNo ? cookieData.mobileNo : false;
    customerData.customerId = cookieData && cookieData.customerId ? cookieData.customerId : false;

    if (customerData.mobileNo) {
      customerData.mobileNo = decrypt(utility.secretKey, customerData.mobileNo);
    }

    if (customerData.customerId) {
      customerData.customerId = decrypt(utility.secretKey, customerData.customerId);
    }

    return customerData;
  };

  this.setVisit = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {
    var cookieData, utmData, _this, createVisit;

    return _regeneratorRuntime().wrap(function _callee2$(_context2) {
      while (1) {
        switch (_context2.prev = _context2.next) {
          case 0:
            cookieData = cookie.getObject(this._gucCookieName);
            utmData = utility.isEmpty(this.configuration.utmData) ? false : this.configuration.utmData;
            _this = this;

            if (!window.isPbgucVisitRunning) {
              _context2.next = 5;
              break;
            }

            return _context2.abrupt("return");

          case 5:
            //check if product visit exists
            createVisit = /*#__PURE__*/function () {
              var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {
                var siteData, urlParams, newUtmSource, existingUtmSource, _visit, visit;

                return _regeneratorRuntime().wrap(function _callee$(_context) {
                  while (1) {
                    switch (_context.prev = _context.next) {
                      case 0:
                        window.isPbgucVisitRunning = true;

                        if (!(_this.customStorage.isHub == true)) {
                          _context.next = 4;
                          break;
                        }

                        window.isPbgucVisitRunning = false;
                        return _context.abrupt("return");

                      case 4:
                        _context.next = 6;
                        return _this.customStorage.get(_this.configuration.siteId);

                      case 6:
                        siteData = _context.sent;

                        if (!(utility.isEmpty(siteData) && !utility.isEmpty(cookieData) && !utility.isEmpty(cookieData.visit))) {
                          _context.next = 13;
                          break;
                        }

                        _context.next = 10;
                        return _this.setInitialSiteObject(_this, cookieData);

                      case 10:
                        _context.next = 12;
                        return _this.customStorage.get(_this.configuration.siteId);

                      case 12:
                        siteData = _context.sent;

                      case 13:
                        if (!(!utility.isEmpty(siteData) && !utility.isEmpty(siteData.visit))) {
                          _context.next = 27;
                          break;
                        }

                        urlParams = utility.urlParams();
                        newUtmSource = utility.result(urlParams, 'utm_source');
                        existingUtmSource = siteData.visit.utmSource;

                        if (!(newUtmSource != existingUtmSource)) {
                          _context.next = 25;
                          break;
                        }

                        _visit = visitService.createVisit(_this.configuration, cookieData, utmData);

                        if (utility.isEmpty(cookieData.absoluteParentVisitId)) {
                          cookie.extendObject(_this._gucCookieName, {
                            absoluteParentVisitId: _visit ? _visit.visitId : ''
                          }, _this.configuration.cookieOption);
                        }

                        cookie.extendObject(_this._gucCookieName, {
                          visit: _visit,
                          updatedAt: utility.currentTime()
                        }, _this.configuration.cookieOption);
                        _context.next = 23;
                        return _this.customStorage.setSiteItem(_this.configuration.siteId, 'visit', _visit);

                      case 23:
                        window.isPbgucVisitRunning = false;
                        return _context.abrupt("return", _visit);

                      case 25:
                        window.isPbgucVisitRunning = false;
                        return _context.abrupt("return", siteData.visit);

                      case 27:
                        visit = visitService.createVisit(_this.configuration, cookieData, utmData);

                        if (utility.isEmpty(cookieData.absoluteParentVisitId)) {
                          cookie.extendObject(_this._gucCookieName, {
                            absoluteParentVisitId: visit ? visit.visitId : '',
                            updatedAt: utility.currentTime()
                          }, _this.configuration.cookieOption);
                        } //Check if parent visit exists


                        if (utility.isEmpty(cookieData.visit)) {
                          cookie.extendObject(_this._gucCookieName, {
                            visit: visit,
                            updatedAt: utility.currentTime()
                          }, _this.configuration.cookieOption);
                        }

                        if (utility.isEmpty(siteData) || utility.isEmpty(siteData.visit)) {
                          _this.setInitialSiteObject(_this, cookieData, visit);
                        }

                        window.isPbgucVisitRunning = false;
                        return _context.abrupt("return", visit);

                      case 33:
                      case "end":
                        return _context.stop();
                    }
                  }
                }, _callee);
              }));

              return function createVisit() {
                return _ref2.apply(this, arguments);
              };
            }();

            _context2.next = 8;
            return createVisit();

          case 8:
            return _context2.abrupt("return", _context2.sent);

          case 9:
          case "end":
            return _context2.stop();
        }
      }
    }, _callee2, this);
  }));

  this.getVisit = function () {
    return this.customStorage.getSiteVisit(this.configuration.siteId);
  };

  this.getData = function () {
    var id = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : undefined;
    var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;
    return this.customStorage.getData(this.configuration.siteId, id, type);
  };

  this.setData = function (dataObj) {
    var _this2 = this;

    try {
      window.pbgucGtag({
        'label': 'pbguc_set_lead_data',
        'site-id': this.configuration.siteId,
        'leadId': dataObj.id
      });
    } catch (error) {
      console.log(error);
    }

    if (dataObj.application && Array.isArray(dataObj.application)) {
      var leadId = dataObj.id;
      dataObj.application.map(function (app) {
        window.pbgucGtag({
          'label': 'pbguc_set_application_data',
          'site-id': _this2.configuration.siteId,
          'leadId': leadId,
          'application_id': app.id,
          'partnerId': app.partnerId,
          'productName': app.productName
        });
      });
    }

    return this.customStorage.setData(this.configuration.siteId, dataObj);
  };

  this.deleteData = function (id, type) {
    try {
      window.pbgucGtag({
        'label': 'pbguc_delete_lead_data',
        'site-id': this.configuration.siteId,
        'deletedLeadId': id
      });
    } catch (error) {
      console.log(error);
    }

    return this.customStorage.deleteData(this.configuration.siteId, id, type);
  };

  this.setApplication = function (id, applicationPayload) {
    try {
      window.pbgucGtag({
        'label': 'pbguc_set_application_data',
        'site-id': this.configuration.siteId,
        'leadId': id,
        'application_id': applicationPayload.id,
        'partnerId': applicationPayload.partnerId,
        'productName': applicationPayload.productName
      });
    } catch (error) {
      console.log(error);
    }

    return this.customStorage.setApplication(this.configuration.siteId, id, applicationPayload);
  };

  this.deleteApplication = function (id, applicationId) {
    try {
      window.pbgucGtag({
        'label': 'pbguc_delete_application_data',
        'site-id': this.configuration.siteId,
        'leadId': id,
        'application_id': applicationId
      });
    } catch (error) {
      console;
    }

    return this.customStorage.deleteApplication(this.configuration.siteId, id, applicationId);
  };

  this.decryptPbgucData = function (cipherText) {
    return decrypt(utility.secretKey, cipherText);
  };
  /* // 30 minutes changes
  this._invalidateVisitChain        = async function(){
      let cookieData  = cookie.getObject(this._gucCookieName);
      const curTimestamp = new Date();
      const lastActiveTimestamp = new Date(cookieData.lastActive);
      let duration = curTimestamp - lastActiveTimestamp ;
      duration = Math.floor(duration / 60e3); // from milli-second to minutes
      console.log("Minutes = ",duration);
      if(duration > 2){
          let visitObj = {} ;
          try {
              cookieData.absoluteParentVisitId = undefined;
              visitObj = visitService.createVisit(this.configuration, cookieData) ;
              if(utility.isEmpty(visitObj.visitId)){
                  throw new Error(`Failed to create visitId`);
              }
              console.log(this.configuration.siteId, 'visit', visitObj);
              const rsp = await this.customStorage.setSiteItem(this.configuration.siteId, 'visit', visitObj);
              console.log(rsp);
              await this.customStorage.setSiteItem(this.configuration.siteId, 'absoluteParentVisitId', visitObj.visitId);
          } catch (error) {
              console.log(error);
          }
           cookie.extendObject(this._gucCookieName, {
              lastActive: utility.currentTime(),
              absoluteParentVisitId: visitObj.visitId
          }, this.configuration.cookieOption);
      }
      else if(duration > 1){
          cookie.extendObject(this._gucCookieName, {
              lastActive: utility.currentTime(),
          }, this.configuration.cookieOption);
      }
  }
  */


  this.renderWidget = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {
    var _this, data, dataArray, _i, j, htmlStr, i, styleElem, divElem;

    return _regeneratorRuntime().wrap(function _callee5$(_context5) {
      while (1) {
        switch (_context5.prev = _context5.next) {
          case 0:
            _this = this; //creating pbguc data array

            _context5.next = 3;
            return this.getData();

          case 3:
            data = _context5.sent;
            dataArray = [];

            for (_i = 0; _i < data.length; _i++) {
              for (j = 0; j < data[_i].application.length; j++) {
                data[_i].application[j].siteItemId = data[_i].id;
                dataArray.push(data[_i].application[j]);
              }
            } // delete a single apllication.


            window.pbgucDeleteApplication = /*#__PURE__*/function () {
              var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(siteItemId, applicationId) {
                return _regeneratorRuntime().wrap(function _callee3$(_context3) {
                  while (1) {
                    switch (_context3.prev = _context3.next) {
                      case 0:
                        _context3.next = 2;
                        return _this.deleteApplication(siteItemId, applicationId);

                      case 2:
                        if (!(document.getElementById("check_id") !== null && document.getElementById("check_id").checked == true)) {
                          _context3.next = 6;
                          break;
                        }

                        pbGucHandleShowMore();
                        _context3.next = 8;
                        break;

                      case 6:
                        _context3.next = 8;
                        return _this.renderWidget();

                      case 8:
                      case "end":
                        return _context3.stop();
                    }
                  }
                }, _callee3);
              }));

              return function (_x, _x2) {
                return _ref4.apply(this, arguments);
              };
            }(); // close pbguc pop-up.


            window.pbgucCloseModel = function () {
              document.getElementById("pbgucContainer").style.display = "none";
            }; // pbguc pop-up scroll to top.


            window.pbgucScrollToTop = function () {
              document.getElementById("pbguclist").scrollTo(0, 0);
            }; // pbguc pop-up show more functionality.


            window.pbGucHandleShowMore = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {
              return _regeneratorRuntime().wrap(function _callee4$(_context4) {
                while (1) {
                  switch (_context4.prev = _context4.next) {
                    case 0:
                      _context4.next = 2;
                      return _this.renderWidget();

                    case 2:
                      if (document.getElementById("check_id") !== null) {
                        document.getElementById("check_id").checked = true;
                      }

                    case 3:
                    case "end":
                      return _context4.stop();
                  }
                }
              }, _callee4);
            })); // main html string

            htmlStr = "\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n            <div class=\"pbgucMainBox\">\n            <span class=\"mainCancle\" onclick=pbgucCloseModel()></span>\n                <div class=\"title\">Recent Activities<span>&nbsp;</span></div>\n                    <ul>\n                        <li class=\"container\">";

            if (dataArray.length <= 1) {
              htmlStr += "<ul id=\"pbguclist\" class=\"heightFix\">";
            } else {
              if (/Android|webOS|iPhone|iPod|BlackBerry|IEMobile/i.test(navigator.userAgent)) {
                htmlStr += "\n                <input type=\"checkbox\" id=\"check_id\">\n                <label onclick = \"pbgucScrollToTop();\" for=\"check_id\" class=\"showMobile bgTransparent\"></label>\n                <div class=\"showMobile stripFix\">You have ".concat(dataArray.length - 1, " more activities. Swipe up to see all.</div>\n                <ul id=\"pbguclist\" class=\"heightFix\">");
              } else {
                htmlStr += "\n                <input type=\"checkbox\" id=\"check_id\">\n                <label onclick = \"pbgucScrollToTop();\" for=\"check_id\" href=\"#pbguclist\" class=\"showDesktop\">You have ".concat(dataArray.length - 1, " more activities. <span class=\"showDesktop\">Click Here</span> to see all.</label>\n                <ul id=\"pbguclist\" class=\"heightFix\">");
              }
            }

            for (i = 0; i < dataArray.length; i++) {
              htmlStr += "\n                <li id=".concat(dataArray[i].id, ">\n                    <div class=\"contentBox\">\n                      <span class=\"cancle\"><img onclick= \"pbgucDeleteApplication('").concat(dataArray[i].siteItemId, "','").concat(dataArray[i].id, "');\" src=\"../images/cancle.svg\" style = \"margin-top:16px; height:20px\" name=\"cancle\"/></span>\n                      <div class=\"productImg\">\n                        <img src=").concat(dataArray[i].image, " name=\"product\"/>\n                      </div>\n                      <div class=\"productInfo\">\n                        <div class=\"subTitle\">").concat(dataArray[i].title, "</div>\n                        <p><strong>").concat(dataArray[i].subtitle, "</strong></p>\n                        <e class=\"showMobile dateFix\">").concat(dataArray[i].date, "</e>\n                      </div>\n                      <div class=\"continueBox\">\n                        <a href=").concat(dataArray[i].continueUrl, " target=\"_blank\">Continue</a>\n                        <div class=\"clear\"></div>\n                        <e class=\"showDesktop\">").concat(dataArray[i].updatedAt, "</e>\n                      </div>\n                    </div>\n                </li>");
            }

            htmlStr += "\n                    </ul>\n                </li>\n            </ul>\n        </div>";
            styleElem = document.createElement('style');
            styleElem.setAttribute("id", "pbgucStyle");

            if (document.getElementById("pbgucStyle") === null) {
              styleElem.innerHTML = styleStr;
              document.head.appendChild(styleElem);
            }

            divElem = document.createElement('div');
            divElem.setAttribute("id", "pbgucContainer");

            if (document.getElementById("pbgucContainer") === null) {
              divElem.innerHTML = htmlStr;
              document.body.appendChild(divElem);
            } else {
              document.getElementById("pbgucContainer").remove();
              divElem.innerHTML = htmlStr;
              document.body.appendChild(divElem);
            }

          case 20:
          case "end":
            return _context5.stop();
        }
      }
    }, _callee5, this);
  }));

  this.getCustomStorageObject = function () {
    var subDomainRegex = undefined;
    var hubPage = undefined;

    var _cookie$getObject = cookie.getObject(this._gucCookieName),
        id = _cookie$getObject.id;

    switch (this._environment) {
      case 'local':
      case 'development':
        subDomainRegex = new RegExp('[0-9a-z]*');
        hubPage = 'http://127.0.0.1:5500/';
        break;

      case 'staging':
        subDomainRegex = new RegExp('[0-9a-z]*\.paisabazaar\.com');
        hubPage = 'https://staging-mars.paisabazaar.com/puckar/pbguc.html';
        break;

      case 'production':
        subDomainRegex = new RegExp('[0-9a-z]*\.paisabazaar\.com');
        hubPage = 'https://www.paisabazaar.com/components/widget/pbguc/pbguc.html';
        break;

      default:
        break;
    }

    return new customStorage(subDomainRegex, hubPage, id);
  };

  this.setInitialSiteObject = /*#__PURE__*/function () {
    var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(_this, cookieData, visit) {
      var siteId, id, visitObj, utmData;
      return _regeneratorRuntime().wrap(function _callee6$(_context6) {
        while (1) {
          switch (_context6.prev = _context6.next) {
            case 0:
              siteId = _this.configuration.siteId;
              id = cookieData.id;
              visitObj = {};

              if (!utility.isEmpty(visit)) {
                _context6.next = 11;
                break;
              }

              utmData = utility.isEmpty(_this.configuration.utmData) ? false : _this.configuration.utmData;
              _context6.next = 7;
              return visitService.createVisit(_this.configuration, cookieData, utmData);

            case 7:
              visitObj = _context6.sent;
              cookie.extendObject(_this._gucCookieName, {
                visit: visitObj,
                updatedAt: utility.currentTime()
              }, _this.configuration.cookieOption);
              _context6.next = 12;
              break;

            case 11:
              visitObj = visit;

            case 12:
              _context6.next = 14;
              return this.customStorage.initialize(id, siteId, visitObj);

            case 14:
            case "end":
              return _context6.stop();
          }
        }
      }, _callee6, this);
    }));

    return function (_x3, _x4, _x5) {
      return _ref6.apply(this, arguments);
    };
  }();

  this.environment = this.initialize();
}

if (typeof exports !== 'undefined') {
  if (typeof module !== 'undefined' && module.exports) {
    exports = module.exports = PaisabazaarGuc;
  }

  exports.PaisabazaarGuc = PaisabazaarGuc;
}