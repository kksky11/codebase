let path                = require('path');
let webpack             = require('webpack');
let BUILD_DIR           = path.resolve(__dirname);
let APP_DIR             = path.resolve(__dirname);

// let config = {
//     entry           : APP_DIR + '/index.js',

//     output: {
//         path        : BUILD_DIR,
//         filename    : 'guc-plugin.js'
//     },

//     module : {
//         loaders : [
//             {
//                 test    : /\.jsx?/,
//                 include : APP_DIR,
//                 loader  : 'babel-loader',
                
//             },
//             {
//                 test    : /\.css$/,
//                 use     : [
//                     'style-loader', 
//                     'css-loader'
//                 ]
//             },
//             {
//                 test: /\.scss$/,
//                 use: [
//                     "style-loader",
//                     "css-loader",
//                     "sass-loader"
//                 ]
//             },
//             { test: /\.(png|woff|woff2|eot|ttf|svg|jpg|webp)$/, loader: 'url-loader?limit=100000' }

//         ]
//     },
//     plugins: [
//         new webpack.NamedModulesPlugin(),
//         new webpack.optimize.UglifyJsPlugin({
//             compress: { warnings: false },
//             comments    : false,
//             mangle      : false,
//             minimize    : true
//         })
//     ]
// };

// module.exports = config;




// import webpack from 'webpack'

const config = {
    mode: 'production',
    entry: {
        development: APP_DIR + '/development.bundler.js',
        staging: APP_DIR + '/staging.bundler.js',
        production: APP_DIR + '/production.bundler.js',
    },
    output: {
        filename: '[name].bundle.js'
    },
    module: {
        rules: [
          {
            test: /\.m?js$/,
            resolve: {
                fullySpecified: false
            },
            exclude: /(node_modules|bower_components)/,
            use: {
              loader: 'babel-loader',
              options: {
                presets: ['@babel/preset-env']
              }
            }
          }
        ]
    },
    plugins: [
        // new webpack.optimize.UglifyJsPlugin()
    ]
}

module.exports = config;